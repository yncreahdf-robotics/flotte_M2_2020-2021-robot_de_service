;; Auto-generated. Do not edit!


(when (boundp 'turtlebot2i_block_manipulation::BlockDetectionGoal)
  (if (not (find-package "TURTLEBOT2I_BLOCK_MANIPULATION"))
    (make-package "TURTLEBOT2I_BLOCK_MANIPULATION"))
  (shadow 'BlockDetectionGoal (find-package "TURTLEBOT2I_BLOCK_MANIPULATION")))
(unless (find-package "TURTLEBOT2I_BLOCK_MANIPULATION::BLOCKDETECTIONGOAL")
  (make-package "TURTLEBOT2I_BLOCK_MANIPULATION::BLOCKDETECTIONGOAL"))

(in-package "ROS")
;;//! \htmlinclude BlockDetectionGoal.msg.html


(defclass turtlebot2i_block_manipulation::BlockDetectionGoal
  :super ros::object
  :slots (_frame _table_height _block_size ))

(defmethod turtlebot2i_block_manipulation::BlockDetectionGoal
  (:init
   (&key
    ((:frame __frame) "")
    ((:table_height __table_height) 0.0)
    ((:block_size __block_size) 0.0)
    )
   (send-super :init)
   (setq _frame (string __frame))
   (setq _table_height (float __table_height))
   (setq _block_size (float __block_size))
   self)
  (:frame
   (&optional __frame)
   (if __frame (setq _frame __frame)) _frame)
  (:table_height
   (&optional __table_height)
   (if __table_height (setq _table_height __table_height)) _table_height)
  (:block_size
   (&optional __block_size)
   (if __block_size (setq _block_size __block_size)) _block_size)
  (:serialization-length
   ()
   (+
    ;; string _frame
    4 (length _frame)
    ;; float32 _table_height
    4
    ;; float32 _block_size
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _frame
       (write-long (length _frame) s) (princ _frame s)
     ;; float32 _table_height
       (sys::poke _table_height (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _block_size
       (sys::poke _block_size (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; float32 _table_height
     (setq _table_height (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _block_size
     (setq _block_size (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get turtlebot2i_block_manipulation::BlockDetectionGoal :md5sum-) "55e74460cfe309311425690ecb457a45")
(setf (get turtlebot2i_block_manipulation::BlockDetectionGoal :datatype-) "turtlebot2i_block_manipulation/BlockDetectionGoal")
(setf (get turtlebot2i_block_manipulation::BlockDetectionGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
string frame
float32 table_height
float32 block_size

")



(provide :turtlebot2i_block_manipulation/BlockDetectionGoal "55e74460cfe309311425690ecb457a45")


